#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
print(plots[[i]])
}
# Loop through locations to make a histogram for each one
for(i in 1:length(locations)){
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10)) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
print(plots[[i]])
}
# Loop through locations to make a histogram for each one
for(i in 1:length(locations)){
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10)) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
print(plots[[i]])
}
# Loop through locations to make a histogram for each one
for(i in 1:length(locations)){
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10)) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_y_discrete()
print(plots[[i]])
}
i = 1
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10), fill = colors[i]) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_y_discrete()
print(plots[[i]])
ggplot(monthly, aes(x = DevDiff, colour = Location)) +
geom_freqpoly()
ggplot(monthly, aes(x = DevDiff, colour = Location)) +
geom_freqpoly(binwidth = 10)
ggplot(monthly, aes(x = DevDiff, colour = Location)) +
geom_freqpoly(binwidth = 5)
ggplot(monthly, aes(x = DevDiff, colour = Location)) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
# Loop through locations to make a histogram for each one
for(i in 1:length(locations)){
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10), fill = colors[i]) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_y_discrete(breaks = seq(0, ))
print(plots[[i]])
}
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5)) + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid3") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm")) +
scale_fill_manual(values=wes_palette(n=5, name="Darjeeling1"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-5 ,100,by=5),
labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-5,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Locations")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-10,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,25,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Difference in Deviance (%)") + ylab("Number of Datasets")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-10,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,30,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
pdf("../Images/devcomp.pdf", height = 3, width = 3.2)
all
dev.off()
# Find out how many models successfully converged on both multivariate models
success = monthly %>% filter(!is.na(Multi_AIC) & !is.na(MultiAR_AIC))
cat("\n", nrow(success), " out of ", nrow(monthly), " monthly datasets successfully converged in both AR and non-AR multivariate models")
# Find out how many datasets were significantly worse, the same, or better with the AR term incorporated
counts = success %>% mutate(AIC_diff = Multi_AIC - MultiAR_AIC) %>% count(AIC_diff > 2, AIC_diff < -2)
counts = counts %>% add_column(Result = c("Equal", "Worse", "Better"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.0f", n), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f", n/length(!is.na(monthly$MultiAR_AIC))), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC)), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f%", 100*n/length(!is.na(monthly$MultiAR_AIC))), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f %", 100*n/length(!is.na(monthly$MultiAR_AIC))), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f\%", 100*n/length(!is.na(monthly$MultiAR_AIC))), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
?sprintf
sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), y= n)
sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC)))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC)), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = sprintf("%.1f", paste0(100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "grey50") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
pdf("../Images/AICcomp.pdf", height = 3, width = 3)
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Fit of Autoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
dev.off()
pdf("../Images/AICcomp.pdf", height = 3, width = 3)
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Relative Performance of Autoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
dev.off()
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Relative Performance of\\nAutoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Relative Performance of\nAutoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
pdf("../Images/AICcomp.pdf", height = 3, width = 3)
ggplot(counts, aes(x = Result, y = n)) + geom_bar(stat = "identity", fill = "thistle4") +
theme_bw() + ylab("Number of Locations") + xlab("Relative Performance of\nAutoregressive Model") +
geom_text(aes(label = paste0(sprintf("%.1f", 100*n/length(!is.na(monthly$MultiAR_AIC))), "%"), y= n),  vjust = -1)+
guides(fill=FALSE) +
scale_y_continuous(breaks = seq(0,100,25), limits = c(0,100)) +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 10),
plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
dev.off()
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10), fill = colors[i]) + theme_bw() +
xlab("Change in Deviance (%) with\nAddition of Autoregressive Term") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_y_discrete(breaks = seq(0, ))
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Change in Deviance (%) with\nAddition of Autoregressive Term") + ylab("Number of Datasets")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-10,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,30,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
pdf("../Images/devcomp.pdf", height = 3, width = 3.2)
all
dev.off()
median(monthly$DevDiff)
mean(monthly$DevDiff)
monthly = read.csv("../Results/GAM_monthly.csv", header = T, stringsAsFactors = F)
# Remove rows where either multi model did not converge
remove = which(is.na(monthly$MultiAR_DevianceExplained) | is.na(monthly$MultiAR_DevianceExplained))
monthly = monthly[-remove,]
# Also remove monthly datasets with too much zero inflation
remove = which(monthly$z_inflation_pct > 90)
monthly = monthly[-remove,]
monthly$DevDiff = monthly$MultiAR_DevianceExplained - monthly$Multi_DevianceExplained
# ggplot(monthly, aes(x = DevDiff, color = Location)) + geom_density(alpha = 1) + theme_bw() +
#   xlab("Difference in Deviance (%)") + xlim(0,100) + ylab("Density")
all = ggplot(monthly, aes(x = DevDiff)) + geom_histogram(breaks = seq(-5,100,5), fill = "darkorchid4") + theme_bw() +
xlab("Change in Deviance (%) with\nAddition of Autoregressive Term") + ylab("Number of Datasets")  +
scale_x_continuous(breaks= seq(-10 ,100,by=5),
labels = c(-10, "", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
rep("",3), 80, rep("",3), 100),
limits = c(-10,100), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,30,5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.1,0.3,0,0.1), "cm"))
all
pdf("../Images/devcomp.pdf", height = 3, width = 3.2)
all
dev.off()
# Create a vector of locations
locations = unique(monthly$Location)
# Create empty list to store each location plot
plots = vector("list", length = length(locations))
names(plots) = locations
colors = wes_palette("Royal2", n = 5, type = "discrete")
# Loop through locations to make a histogram for each one
for(i in 1:length(locations)){
tmp = monthly %>% filter(Location == locations[i])
color = colors[i]
plots[[i]] = ggplot(tmp, aes(x = DevDiff)) + geom_histogram(breaks = seq(-10,100,10), fill = colors[i]) + theme_bw() +
xlab("Change in Deviance (%) with\nAddition of Autoregressive Term") + ylab("Number of Locations")  + ggtitle(locations[i]) +
#scale_x_continuous(breaks= seq(-5 ,100,by=5),
#                   labels = c("", 0, rep("",3), 20, rep("",3), 40, rep("",3), 60,
#                              rep("",3), 80, rep("",3), 100),
#                   limits = c(-5,100), expand = c(0,0)) +
#scale_y_continuous(breaks = seq(0,max(tmp$),5)) +
theme(legend.position = c(0.7, 0.65), legend.title = element_text(size = 8),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size =10), axis.title.y = element_text(size = 10),
legend.text = element_text(size = 7), plot.margin = unit(c(0.3,0.3,0,0.1), "cm")) +
scale_y_discrete(breaks = seq(0, ))
print(plots[[i]])
}
median(monthly$DevDiff)
mean(monthly$DevDiff)
monthly %>% filter(DefDiff > 60)
monthly %>% filter(DevDiff > 60)
#### Significance of Temperature and Precipitation ####
# Load monthly data
monthly = read_csv("../Results/GAM_monthly.csv")
# Remove datasets with more than 90% zero inflation and keep only relevant columns
monthly = monthly %>%
filter(z_inflation_pct <= 90.0 & !is.na(Multi_DevianceExplained)) %>%
select(Species, Location, Multi_SignifVariables, Best_Temp, Best_Precip)
cat("There are ", length(unique(monthly$Species)), " unique species in the variable comparison")
ts_data = read.csv("../Data/Extracted_Data/Aggregated/Lee_weekly.csv")
colnames(ts_data)
species = colnames(ts_data)[10:27]
scale = "weekly"
locale = 'Lee'
pick_spec = "Anopheles.quadrimaculatus"
# Load output data
output = read.csv(file = paste0("../Results/GAM_", scale, ".csv"), header = T, stringsAsFactors = F)
# Load dataset with time series data
ts_data = read.csv(file = paste0("../Data/Extracted_Data/Aggregated/", locale, "_", scale, ".csv"), header = T, stringsAsFactors = F)
species = colnames(ts_data[10:(dim(ts_data)[2]-3)])
# Create vectors identifying the lags at this temporal scale
lags = make_laglists(scale = scale)
## Import functions and libraries
source("gam_functions.R")
# Create vectors identifying the lags at this temporal scale
lags = make_laglists(scale = scale)
# Create a data frame of lagged meteorological values
lag_table = make_lag_table(temp = ts_data$temp_mean, precip = ts_data$precip_days, lags = lags)
# Pick a species
i = which(species == pick_spec)
# Find row index in output
output_index = which(output$Species == pick_spec & output$Location == locale)
# Prepare x and y variables. We'll use the best fit lags of temp and precip for each species
vars = prep_variables(temp = lag_table[[output$Best_Temp[output_index]]],
precip = lag_table[[output$Best_Precip[output_index]]],
abundance = ts_data[[species[i]]])
hist(vars$abundance)
hist(log(vars$abundance))
sum(log(vars$abundance) == 0)/length(vars$abundance)
hist(log(vars$abundance), fill = "lightblue")
hist(log(vars$abundance), col = "lightblue")
