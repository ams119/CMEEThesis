setwd("~/Documents/CMEEThesis/Code/")
# Load in ff package
library(ff)
library(ffbase)
library(sf)
library(rgdal)
library(maps)
# Find column classes: first read in a sample of the data
sample = read.csv("../../Hefty_Data/vectdyn_fulldata.csv", header = T, nrows = 500)
# Find the classes of each column
sampleclasses = sapply(sample, class)
sampleclasses
# Latitude and Longitude are both numeric- switch to factor to better deal with messups
classesswitch = sampleclasses
classesswitch[10:11] = "factor"
# Read in data frame specifying columns to classes
# Time because it's fun
start = Sys.time()
df1 = read.csv.ffdf(file = "../../Hefty_Data/vectdyn_fulldata.csv", sep = ",", colClasses = classesswitch)
end = Sys.time()
end-start
# Create numeric vectors of just lat/long columns
lats = as.numeric(levels(df1$Latitudes)[df1$Latitudes[]])
longs = as.numeric(levels(df1$Longitudes)[df1$Longitudes[]])
points = data.frame(longs, lats)
# Assign coordinates as sf feature with map crs
# take first a sample of points
points.sample = points[1:100]
# Assign coordinates as sf feature with map crs
# take first a sample of points
points.sample = points[1:100,]
pointssf <- st_as_sf(points.sample, coords = c("longs", "lats"), crs = crswgs84)
# Obtain florida from maps package
state = st_as_sf(map("state", regions = "florida", fill = FALSE, plot = FALSE))
# Obtain the crs of florida map
crswgs84 = st_crs(state)
# Assign coordinates as sf feature with map crs
# take first a sample of points
points.sample = points[1:100,]
pointssf <- st_as_sf(points.sample, coords = c("longs", "lats"), crs = crswgs84)
# Plot the state
plot(state)
# Obtain florida from maps package
usa = st_as_sf(map("state", fill = FALSE, plot = FALSE))
state = subset(usa, grepl("florida", counties$ID))
# Obtain florida from maps package
usa = st_as_sf(map("state", fill = TRUE, plot = FALSE))
state = subset(usa, grepl("florida", counties$ID))
state = subset(usa, grepl("florida", usa$ID))
# Plot the state
plot(state)
points(pointssf[1:200])
points(pointssf)
View(pointssf)
pointssf
state
plot(pointssf)
# Plot the state
plot(state)
points(points.sample$longs, points.sample$lats)
points(points.sample$longs, points.sample$lats, pch = 19)
points(points.sample$longs, points.sample$lats, pch = 19, col = "red")
pointssf <- st_as_sf(points.sample, coords = c("longs", "lats"), crs = crswgs84)
# Plot the state
plot(state)
points(points.sample$longs, points.sample$lats, pch = 19, col = "red")
# Plot the state
plot(pointssf)
# Plot the state
plot(pointssf, pch = 19, col = "red")
plot(state, add = TRUE)
points2 = st_point(points.sample)
points2 = st_point(points.sample$longs, points.sample$lats)
?st_point
# Obtain florida from maps package
usa = st_as_sf(map("state", fill = TRUE, plot = FALSE))
state = subset(usa, grepl("florida", usa$ID))
plot(state, add = TRUE)
plot(state, add = TRUE)
plot(state)
plot(c=usa)
plot(usa)
# Plot the state
plot(pointssf, pch = 19, col = "red", add = TRUE)
